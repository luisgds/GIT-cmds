--git clone https://github.com/luisgds/OOP-EXAMPLES.git >> git clone -b "name of branch that is not default" htt..."
ou com ssh git@git...
Se quiser tirar o historico de git e começar com o seu 
--rm -rf .git >> remove the git 
--git config user.name "Luis" >> without --global to make this local
--git config user.email "LuisgdsTest@example.com"

--git config user.name
Luis
--git config user.email
LuisgdsTest@example.com

--git remote -v >> Saber para onde está enviando
origin  https://github.com/luisgds/OOP-EXAMPLES.git (fetch)
origin  https://github.com/luisgds/OOP-EXAMPLES.git (push)
--git branch -vv >> Saber qual branch está trabalhando atualmente
* main ae3a87b [origin/main: ahead 1] Base test to git clones infos
--git push origin main >> Since we gave a "git clone" to main and the branch is already defined by default or 
--git push -u origin main >> lately will need only git push
Se for a primeira vez irá pedir o nome e a senha, porem vai precisar do ssh se o computador for novo

--ssh-keygen -t rsa -b 4096 -C "luisgdscat10@gmail.com"
vai aparecer um desenho 
--eval "$(ssh-agent -s)"
4 linhas
--ssh-add ~/.ssh/id_rsa
1linha
--cat ~/.ssh/id_rsa.pub
seu ssh

agora vai ter que mudar para ssh todos seus hhtps:
--ssh -T git@github.com >> yes se for primeira vez
Hi yourusername! You've successfully authenticated, but GitHub does not provide shell access.

--git pull >> update the local repository with the remote repository

--git add Anotações.txt >> always remember to do git add "name" and git commit -m "thing" to make very well explicated

--git commit -m "text"
[main d129065] novo grafico
 1 file changed, 148 insertions(+)
 create mode 100644 teste_new.py

--git status >> know what is not commit
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   "Anota\303\247\303\265es2.txt"

no changes added to commit (use "git add" and/or "git commit -a")

--git log >> know what was commit 
commit def456
Author: Seu Nome <seu.email@example.com>
Date:   Sun May 25 14:00 2024 -0700

    Commit que deseja remover

commit abc123
Author: Seu Nome <seu.email@example.com>
Date:   Sun May 24 13:00 2024 -0700

    Commit anterior
--git revert abc123 >> if you did a git push you can do this to remove this file and need to do a git push to reload the remote repository

    GIT CLONE
How this is a test we could do names test for user



--git remote show
origin
{
--git cherry-pick commits >> merge commit per commit into the actual branch
--git checkout branch file1 file2. . . >> merge commits file per file
}

--git push

--git blame Anotações2.txt >> last commit was --git config user.email -LuisgdsTest@example.com
ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  1)     GIT CLONE
ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  2) How this is a test we could do names test for user
ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  3) 
ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  4) --git clone https://github.com/luisgds/OOP-EXAMPLES.git
ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  5) --git config user.name "Luis" >> without --global to make this local
ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  6) --git config user.email "LuisgdsTest@example.com"
ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  7) 
ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  8) --git config user.name
ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  9) Luis
ae3a87b0 (Luis 2024-05-16 11:56:44 -0300 10) --git config user.email
ae3a87b0 (Luis 2024-05-16 11:56:44 -0300 11) LuisgdsTest@example.com

--git diff Anotações2.txt>> last thing commited was ae3a87b0 (Luis 2024-05-16 11:56:44 -0300 11) LuisgdsTest@example.com so the alteration is

diff --git "a/Anota\303\247\303\265es2.txt" "b/Anota\303\247\303\265es2.txt"
index 83be321..25886cc 100644
--- "a/Anota\303\247\303\265es2.txt"
+++ "b/Anota\303\247\303\265es2.txt"
@@ -37,4 +37,6 @@ ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  7)
 ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  8) --git config user.name
 ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  9) Luis
 ae3a87b0 (Luis 2024-05-16 11:56:44 -0300 10) --git config user.email
-ae3a87b0 (Luis 2024-05-16 11:56:44 -0300 11) LuisgdsTest@example.com
\ No newline at end of file
+ae3a87b0 (Luis 2024-05-16 11:56:44 -0300 11) LuisgdsTest@example.com
+
+--git diff Anotações2.txt
...skipping...
diff --git "a/Anota\303\247\303\265es2.txt" "b/Anota\303\247\303\265es2.txt"
index 83be321..25886cc 100644
--- "a/Anota\303\247\303\265es2.txt"
+++ "b/Anota\303\247\303\265es2.txt"
@@ -37,4 +37,6 @@ ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  7)
 ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  8) --git config user.name
 ae3a87b0 (Luis 2024-05-16 11:56:44 -0300  9) Luis
 ae3a87b0 (Luis 2024-05-16 11:56:44 -0300 10) --git config user.email
-ae3a87b0 (Luis 2024-05-16 11:56:44 -0300 11) LuisgdsTest@example.com
\ No newline at end of file
+ae3a87b0 (Luis 2024-05-16 11:56:44 -0300 11) LuisgdsTest@example.com
+
+--git diff Anotações2.txt

{
git diff branch [file]
git log [ref ..ref] [files]
git log --since="date" files
git reset --hard ORIG_HEAD
git reset --hard HEAD
git revert commit
}
